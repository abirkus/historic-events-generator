[project]
name = "historic-events-generator"
version = "0.1.0"
description = "API service layer that connects to various LLMs to generate historical events."
authors = [
    {name = "Andre Birkus",email = "birkusandre@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
    "fastapi[standard] (>=0.115.11,<0.116.0)",
    "openai (>=1.66.3,<2.0.0)",
    "python-dotenv (>=1.0.1,<2.0.0)",
    "pydantic-settings (>=2.8.1,<3.0.0)",
    "llamaapi (>=0.1.36,<0.2.0)",
    "google-genai (>=1.23.0,<2.0.0)",
]


[tool.uv]
dev-dependencies = [
    "pytest<8.0.0,>=7.4.3",
    "mypy<2.0.0,>=1.8.0",
    "ruff<1.0.0,>=0.2.2",
    "pre-commit<4.0.0,>=3.6.2",
    "types-passlib<2.0.0.0,>=1.7.7.20240106",
    "coverage<8.0.0,>=7.4.3",
]


[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
